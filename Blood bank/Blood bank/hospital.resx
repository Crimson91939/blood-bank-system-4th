<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button_hospital_requestlogs.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJ
        TUUH4wUKDhsykCYbiAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAJLSURBVDhP
        fZNdaxNBFIZXS9E0EJtEktpkdz52k0Zb0GC9MARqq5GItDcKiogUtSKR0EIlYvygN954rWLrleCP8MZb
        Qaj7kVD9Oz6zWRElOPBwZs6c8545s7PWuBEp9SKSMoDPoVK7Y/hIzA/4GicEWsuhEFUcK5CHDehHWu9g
        b4W2PU3SVOi6aajgexlK+Yr9vVjgQCkn8LyZyHUlpAi4Bxc5QQ3bg+dDKasDKa8w/zDQuonALPO3sQBK
        Z33PO4FIKvK8Q2wYgSYCl6GbrJ/CJuvb2N5P205jRwIorgRSCl+IyVhwlLANd6ABRahQSCJQHih1E0zM
        SCDUusWRGpBOBPrwCboELgzL5WOh42SHSs1QrA6riL1n/4tJrjO5i/I6tCHHugVbJK/DYiBEyZwQ3ynW
        a3CN+TYFuxa3+4zLaeK4Dg8QWAabIAHmEkvfpcwESk2TUMA3T3wDu+o7znEL5x5M4bgKHRIew1zc25jh
        SznJaRxilmIH1d7RRo7k8/S1ycaT/wmElcoEnzpvThI7CH6EQBsyOFtgbncRW4M55tk4MBk8uAnehCl4
        cuQggMrm1bnmHdDfDZLMt75P0EOsuZNcHMz43QJtX0hclrUvRH7ouk5k21m/Wj3Cac7AAsmXSO5Am4QU
        MYcH5qVqXcJ3LkkfjYNyOcOtFgLXnaXPNAGmyhp2CzaYn+b7p8xz/1arFfa1tpPUPyMqFo+i3jN3wg9m
        +lziFK9hh1bnseZHW2bfNT9gkvb3MHfC2+jAGyrvQj8Uop5s/zMs6xccMRFhdi7rxAAAAABJRU5ErkJg
        gg==
</value>
  </data>
  <data name="button_back_for_stock.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJ
        TUUH4wUJDDsvd5UocwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAADVSURBVDhP
        pZNNCsIwEEa7cmGrV2iSE3gHN4K4FDeCUFDUw4kgqCtBdCHSH8WF1/FVJu5sU/Lgg5DhDWSSBC6kcdzO
        tB6Tfa71VLbdQA6RZuRNzplSPSnV89I6LIxJcmOeyKdCqT4NWlKuRuQFcoZ8RB48OIqUqxF5iXxH3iEP
        kSMpV1PKiCvEG9kij5A7Uq6GgUVMei3yhpRyV8r15AwJ6UouZELc5RLvBt5HKPEaouV3jVo3v0bLt4lS
        c+aS0uTA2v0hWaRJQpPmT9ni9Zks/79zEHwAcmt/yp72Wf8AAAAASUVORK5CYII=
</value>
  </data>
  <data name="button_back_for_request.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJ
        TUUH4wUJDDsvd5UocwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAADVSURBVDhP
        pZNNCsIwEEa7cmGrV2iSE3gHN4K4FDeCUFDUw4kgqCtBdCHSH8WF1/FVJu5sU/Lgg5DhDWSSBC6kcdzO
        tB6Tfa71VLbdQA6RZuRNzplSPSnV89I6LIxJcmOeyKdCqT4NWlKuRuQFcoZ8RB48OIqUqxF5iXxH3iEP
        kSMpV1PKiCvEG9kij5A7Uq6GgUVMei3yhpRyV8r15AwJ6UouZELc5RLvBt5HKPEaouV3jVo3v0bLt4lS
        c+aS0uTA2v0hWaRJQpPmT9ni9Zks/79zEHwAcmt/yp72Wf8AAAAASUVORK5CYII=
</value>
  </data>
</root>